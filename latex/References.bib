
@article{goteAnalysingTimeStampedCoEditing2019,
  title = {Analysing {{Time}}-{{Stamped Co}}-{{Editing Networks}} in {{Software Development Teams}} Using Git2net},
  author = {Gote, Christoph and Scholtes, Ingo and Schweitzer, Frank},
  year = {2019},
  month = nov,
  abstract = {Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication from the commit history of projects. Most of the studied networks are based on the co-authorship of software artefacts. Because this neglects detailed information on code changes and code ownership we introduce git2net, a scalable python software that facilitates the extraction of fine-grained co-editing networks in large git repositories. It uses text mining techniques to analyse the detailed history of textual modifications within files. We apply our tool in two case studies using GitHub repositories of multiple Open Source as well as a commercial software project. Specifically, we use data on more than 1.2 million commits and more than 25'000 developers to test a hypothesis on the relation between developer productivity and co-editing patterns in software teams. We argue that git2net opens up a massive new source of high-resolution data on human collaboration patterns that can be used to advance theory in empirical software engineering, computational social science, and organisational studies.},
  archiveprefix = {arXiv},
  eprint = {1911.09484},
  eprinttype = {arxiv},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\SBAAD7TG\\Gote et al. - 2019 - Analysing Time-Stamped Co-Editing Networks in Soft.pdf;C\:\\Users\\csepa\\Zotero\\storage\\UZYXFZY3\\1911.html},
  journal = {arXiv:1911.09484 [physics]},
  keywords = {Computer Science - Multiagent Systems,Computer Science - Social and Information Networks,Computer Science - Software Engineering,Physics - Physics and Society},
  primaryclass = {physics}
}

@article{sekaraFundamentalStructuresDynamic2016,
  title = {Fundamental Structures of Dynamic Social Networks},
  author = {Sekara, Vedran and Stopczynski, Arkadiusz and Lehmann, Sune},
  year = {2016},
  month = sep,
  volume = {113},
  pages = {9977--9982},
  issn = {0027-8424, 1091-6490},
  doi = {10.1073/pnas.1602803113},
  abstract = {Social systems are in a constant state of flux, with dynamics spanning from minute-by-minute changes to patterns present on the timescale of years. Accurate models of social dynamics are important for understanding the spreading of influence or diseases, formation of friendships, and the productivity of teams. Although there has been much progress on understanding complex networks over the past decade, little is known about the regularities governing the microdynamics of social networks. Here, we explore the dynamic social network of a densely-connected population of {$\sim$}1,000 individuals and their interactions in the network of real-world person-to-person proximity measured via Bluetooth, as well as their telecommunication networks, online social media contacts, geolocation, and demographic data. These high-resolution data allow us to observe social groups directly, rendering community detection unnecessary. Starting from 5-min time slices, we uncover dynamic social structures expressed on multiple timescales. On the hourly timescale, we find that gatherings are fluid, with members coming and going, but organized via a stable core of individuals. Each core represents a social context. Cores exhibit a pattern of recurring meetings across weeks and months, each with varying degrees of regularity. Taken together, these findings provide a powerful simplification of the social network, where cores represent fundamental structures expressed with strong temporal and spatial regularity. Using this framework, we explore the complex interplay between social and geospatial behavior, documenting how the formation of cores is preceded by coordination behavior in the communication networks and demonstrating that social behavior can be predicted with high precision.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\6MKRWIXV\\Sekara et al. - 2016 - Fundamental structures of dynamic social networks.pdf},
  journal = {Proceedings of the National Academy of Sciences},
  language = {en},
  number = {36}
}

@inproceedings{surekaUsingSocialNetwork2011,
  title = {Using Social Network Analysis for Mining Collaboration Data in a Defect Tracking System for Risk and Vulnerability Analysis},
  booktitle = {Proceedings of the 4th {{India Software Engineering Conference}}},
  author = {Sureka, Ashish and Goyal, Atul and Rastogi, Ayushi},
  year = {2011},
  month = feb,
  pages = {195--204},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1953355.1953381},
  abstract = {Open source software projects are characterized as self organizing and dynamic in which volunteers around the world primarily driven by self-motivation (and not necessarily monetary compensation) contribute and collaborate to a software product. In contrast to close source or proprietary software, the organizational structure and task allocation in an open source project setting is unstructured. Software project managers perform risk, threat and vulnerability analysis to gain insights into the organizational structure for de-risking or risk mitigation. For example, it is important for a project manager to have an understanding of critical employees, core team, subject matter experts, sub-groups, leaders and communication bridges. Software repositories such as defect tracking systems, versioning systems and mailing lists contains a wealth of valuable information that can be mined for solving practically useful software engineering tasks. In this paper, we present a systematic approach to mine defect tracking system for risk, threat and vulnerability analysis in a software project. We derive a collaboration network from a defect tracking system and apply social network analysis techniques to investigate the derived network for the purpose of risk and vulnerability analysis. We perform empirical analysis on bug report data of Mozilla Firefox project and present the results of our analysis. We demonstrate how important information pertaining to risk and vulnerability can be uncovered using network analysis techniques from static record keeping software archive such as the bug tracking system.},
  isbn = {978-1-4503-0559-4},
  keywords = {collaboration network,defect tracking system,mining software repositories,risk,social network analysis,threat and vulnerability analysis},
  series = {{{ISEC}} '11}
}


