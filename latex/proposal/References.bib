
@article{alexanderharsWorkingFreeMotivations2002,
  title = {Working for {{Free}}? {{Motivations}} for {{Participating}} in {{Open}}-{{Source Projects}}},
  shorttitle = {Working for {{Free}}?},
  author = {Alexander Hars, Shaosong Ou},
  year = {2002},
  month = apr,
  volume = {6},
  pages = {25--39},
  publisher = {{Routledge}},
  issn = {1086-4415},
  doi = {10.1080/10864415.2002.11044241},
  abstract = {The success of the Linux operating system has demonstrated the viability of open-source software, an alternative form of software development that challenges traditional assumptions about software markets. Understanding why developers participate in open-source projects is crucial for assessing the impact of open-source software. Their motivations fall into two broad categories: internal factors (e.g., intrinsic motivation, altruism) and external rewards (e.g., expected future returns, personal needs). The results of a survey administered to open-source programmers are summarized.},
  annotation = {\_eprint: https://doi.org/10.1080/10864415.2002.11044241},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\E5HSI6EE\\Alexander Hars - 2002 - Working for Free Motivations for Participating in.pdf;C\:\\Users\\csepa\\Zotero\\storage\\FMV2JS7T\\10864415.2002.html},
  journal = {International Journal of Electronic Commerce},
  keywords = {ALTRUISM HUMAN CAPITAL INTRINSIC MOTIVATION MOTIVATIONS OPEN-SOURCE SOFTWARE SOFTWARE DEVELOPMENT},
  number = {3}
}

@inproceedings{azarbakhtDrawingBigPicture2013,
  title = {Drawing the Big Picture: Analyzing {{FLOSS}} Collaboration with Temporal Social Network Analysis},
  shorttitle = {Drawing the Big Picture},
  booktitle = {Proceedings of the 9th {{International Symposium}} on {{Open Collaboration}}},
  author = {Azarbakht, Amir},
  year = {2013},
  month = aug,
  pages = {1--1},
  publisher = {{ACM}},
  address = {{Hong Kong China}},
  doi = {10.1145/2491055.2491085},
  abstract = {How can we understand FOSS collaboration better? Can social issues that emerge be identified and addressed before it is too late? Can the community heal itself, become more transparent and inclusive, and promote diversity? We propose a technique to address these issues by quantitative analysis of social dynamics in FOSS communities. We propose using social network analysis metrics to identify growth patterns and unhealthy dynamics; giving the community a heads-up when they can still take action to ensure the sustainability of the project.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\DBNEE8XN\\Azarbakht - 2013 - Drawing the big picture analyzing FLOSS collabora.pdf},
  isbn = {978-1-4503-1852-5},
  language = {en}
}

@inproceedings{birdLatentSocialStructure2008,
  title = {Latent Social Structure in Open Source Projects},
  booktitle = {Proceedings of the 16th {{ACM SIGSOFT International Symposium}} on {{Foundations}} of Software Engineering},
  author = {Bird, Christian and Pattison, David and D'Souza, Raissa and Filkov, Vladimir and Devanbu, Premkumar},
  year = {2008},
  month = nov,
  pages = {24--35},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1453101.1453107},
  abstract = {Commercial software project managers design project organizational structure carefully, mindful of available skills, division of labour, geographical boundaries, etc. These organizational "cathedrals" are to be contrasted with the "bazaar-like" nature of Open Source Software (OSS) Projects, which have no pre-designed organizational structure. Any structure that exists is dynamic, self-organizing, latent, and usually not explicitly stated. Still, in large, complex, successful, OSS projects, we do expect that subcommunities will form spontaneously within the developer teams. Studying these subcommunities, and their behavior can shed light on how successful OSS projects self-organize. This phenomenon could well hold important lessons for how commercial software teams might be organized. Building on known well-established techniques for detecting community structure in complex networks, we extract and study latent subcommunities from the email social network of several projects: Apache HTTPD, Python, PostgresSQL, Perl, and Apache ANT. We then validate them with software development activity history. Our results show that subcommunities do indeed spontaneously arise within these projects as the projects evolve. These subcommunities manifest most strongly in technical discussions, and are significantly connected with collaboration behaviour.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\Q62BXRR5\\Bird et al. - 2008 - Latent social structure in open source projects.pdf},
  isbn = {978-1-59593-995-1},
  keywords = {collaboration,open source software,social networks},
  series = {{{SIGSOFT}} '08/{{FSE}}-16}
}

@article{conaldiLongitudinalStudyCollaboration,
  title = {A {{Longitudinal Study}} on {{Collaboration Networks}} and {{Decision}} to {{Participate}} in a {{FLOSS Community}}},
  author = {Conaldi, Guido and Tonellato, Marco},
  pages = {5},
  abstract = {In this paper we conjecture that individual decisions of FLOSS (Free/Libre Open Source Software) developers to take on a task are influenced by network relations generated by collaboration among project members. In order to explore our conjecture we collected data on a FLOSS project team consisting of 227 developers committed since 2002 to the development of a web browser. We reconstructed 2-mode cocollaboration networks (software developer by bug) in which a tie represents an action taken by a developer in order to solve a specific bug. Co-collaboration networks were collected at five points in time during a six-month development cycle of the software. We report and discuss results of longitudinal actor-based modeling that we specify to test for the influence of local network structures on developer's decision to take action on a specific bug. The study controls for bugspecific and developer-specific characteristics that may also affect developers' decisions exogenously. We also control for priority and severity levels assigned by the team to bugs in an attempt to manage voluntary contribution.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\YUBEHQQ4\\Conaldi and Tonellato - A Longitudinal Study on Collaboration Networks and.pdf},
  language = {en}
}

@misc{crowstonSocialStructureFree2005,
  title = {The Social Structure of Free and Open Source Software Development},
  author = {Crowston, Kevin and Howison, James},
  year = {2005},
  month = feb,
  publisher = {{Valauskas, Edward J.}},
  abstract = {The authors examine communication patters of FLOSS projects, finding that FLOSS development teams vary widely in centralizing or decentralizing their communications.},
  copyright = {Copyright Kevin Crowston, 2005 - All rights reserved.},
  howpublished = {https://firstmonday.org/ojs/index.php/fm/article/download/1478/1393?inline=1},
  journal = {First Monday, ISSN 1396-0466},
  language = {en},
  type = {Text}
}

@article{davidDynamicsInnovationOpen2008,
  title = {Dynamics of Innovation in an ``Open Source'' Collaboration Environment: Lurking, Laboring, and Launching {{FLOSS}} Projects on {{SourceForge}}},
  shorttitle = {Dynamics of Innovation in an ``Open Source'' Collaboration Environment},
  author = {David, Paul A. and Rullani, Francesco},
  year = {2008},
  month = aug,
  volume = {17},
  pages = {647--710},
  issn = {0960-6491},
  doi = {10.1093/icc/dtn026},
  abstract = {A systems analysis perspective is adopted to examine the critical properties of the Free/Libre/Open Source Software (FLOSS) mode of innovation, as reflected on the SourceForge platform (SF.net). This approach re-scales March's (1991) framework and applies it to characterize the ``innovation system'' of a ``distributed organization'' of interacting agents in a virtual collaboration environment, rather than to innovation within a firm. March (1991) views the process of innovation at the organizational level as the coupling of sub-processes of exploration and exploitation. Correspondingly, the innovation system of the virtual collaboration environment represented by SF.net is an emergent property of two ``coupled'' processes: one involves the interactions among agents searching the locale for information and knowledge resources to use in designing novel software products (i.e., exploration), and the other involves the mobilization of individuals' capabilities for application in the software development projects that become established on the platform (i.e., exploitation). The micro-dynamics of this system are studied empirically by constructing transition probability matrices representing the movements of 222,835 SF.net users among seven different activity states, which range from ``lurking'' (not contributing or contributing to projects without becoming a member) to ``laboring'' (joining one or more projects as members), and to ``launching'' (founding one or more projects) within each successive 6-month interval. The estimated probabilities are found to form first-order Markov chains describing ergodic processes. This makes it possible the computation of the equilibrium distribution of agents among the states, thereby suppressing transient effects and revealing persisting patterns of project joining and project launching. The latter show the FLOSS innovation process on SF.net to be highly dissipative: a very large proportion of the registered ``developers'' fail to become even minimally active on the platform. There is nevertheless an active core of mobile project joiners, and a (still smaller) core of project founders who persist in creating new projects. The structure of these groups' interactions (as displayed within the 3-year period examined) is investigated in detail, and it is shown that it would be sufficient to sustain both the exploration and exploitation phases of the platform's global dynamics.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\3HSY4PSB\\David and Rullani - 2008 - Dynamics of innovation in an “open source” collabo.pdf;C\:\\Users\\csepa\\Zotero\\storage\\L3ZYYJWL\\666857.html},
  journal = {Industrial and Corporate Change},
  number = {4}
}

@inproceedings{elasriPeripheryCoreTemporal2017,
  title = {From {{Periphery}} to {{Core}}: {{A Temporal Analysis}} of {{GitHub Contributors}}' {{Collaboration Network}}},
  shorttitle = {From {{Periphery}} to {{Core}}},
  booktitle = {Collaboration in a {{Data}}-{{Rich World}}},
  author = {El Asri, Ikram and Kerzazi, Noureddine and Benhiba, Lamia and Janati, Mohammed},
  editor = {{Camarinha-Matos}, Luis M. and Afsarmanesh, Hamideh and Fornasiero, Rosanna},
  year = {2017},
  pages = {217--229},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-319-65151-4_21},
  abstract = {Open-source projects in GitHub exhibit rich temporal dynamics, and diverse contributors' social interactions further intensify this process. In this paper, we analyze temporal patterns associated with Open Source Software (OSS) projects and how the contributor's notoriety grows and fades over time in a core-periphery structure. In order to explore the temporal dynamics of GitHub communities we formulate a time series clustering model using both Social Network Analysis (SNA) and technical metrics. By applying an adaptive time frame incremental approach to clustering, we locate contributors in different temporal networks. We demonstrate our approach on five long-lived OSS projects involving more than 700 contributors and found that there are three main temporal shapes of attention when contributors shift from periphery to core. Our analyses provide insights into common temporal patterns of the growing OSS communities on GitHub and broaden the understanding of the dynamics and motivation of open source contributors.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\ZMXCULUV\\El Asri et al. - 2017 - From Periphery to Core A Temporal Analysis of Git.pdf},
  isbn = {978-3-319-65151-4},
  keywords = {Collaboration,Core-periphery,SNA,Socio-technical relationships},
  language = {en},
  series = {{{IFIP Advances}} in {{Information}} and {{Communication Technology}}}
}

@article{goteAnalysingTimeStampedCoEditing2019,
  title = {Analysing {{Time}}-{{Stamped Co}}-{{Editing Networks}} in {{Software Development Teams}} Using Git2net},
  author = {Gote, Christoph and Scholtes, Ingo and Schweitzer, Frank},
  year = {2019},
  month = nov,
  abstract = {Data from software repositories have become an important foundation for the empirical study of software engineering processes. A recurring theme in the repository mining literature is the inference of developer networks capturing e.g. collaboration, coordination, or communication from the commit history of projects. Most of the studied networks are based on the co-authorship of software artefacts. Because this neglects detailed information on code changes and code ownership we introduce git2net, a scalable python software that facilitates the extraction of fine-grained co-editing networks in large git repositories. It uses text mining techniques to analyse the detailed history of textual modifications within files. We apply our tool in two case studies using GitHub repositories of multiple Open Source as well as a commercial software project. Specifically, we use data on more than 1.2 million commits and more than 25'000 developers to test a hypothesis on the relation between developer productivity and co-editing patterns in software teams. We argue that git2net opens up a massive new source of high-resolution data on human collaboration patterns that can be used to advance theory in empirical software engineering, computational social science, and organisational studies.},
  archiveprefix = {arXiv},
  eprint = {1911.09484},
  eprinttype = {arxiv},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\SBAAD7TG\\Gote et al. - 2019 - Analysing Time-Stamped Co-Editing Networks in Soft.pdf;C\:\\Users\\csepa\\Zotero\\storage\\UZYXFZY3\\1911.html},
  journal = {arXiv:1911.09484 [physics]},
  keywords = {Computer Science - Multiagent Systems,Computer Science - Social and Information Networks,Computer Science - Software Engineering,Physics - Physics and Society},
  primaryclass = {physics}
}

@article{goteGambitOpenSource2021,
  title = {Gambit -- {{An Open Source Name Disambiguation Tool}} for {{Version Control Systems}}},
  author = {Gote, Christoph and Zingg, Christian},
  year = {2021},
  month = mar,
  abstract = {Name disambiguation is a complex but highly relevant challenge whenever analysing real-world user data, such as data from version control systems. We propose gambit, a rule-based disambiguation tool that only relies on name and email information. We evaluate its performance against two commonly used algorithms with similar characteristics on manually disambiguated ground-truth data from the Gnome GTK project. Our results show that gambit significantly outperforms both algorithms, achieving an F1 score of 0.985.},
  archiveprefix = {arXiv},
  eprint = {2103.05666},
  eprinttype = {arxiv},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\MW65L79Y\\Gote and Zingg - 2021 - gambit -- An Open Source Name Disambiguation Tool .pdf;C\:\\Users\\csepa\\Zotero\\storage\\955QMBMT\\2103.html},
  journal = {arXiv:2103.05666 [physics]},
  keywords = {Computer Science - Computers and Society,Computer Science - Social and Information Networks,Computer Science - Software Engineering,Physics - Physics and Society},
  primaryclass = {physics}
}

@inproceedings{jinxuTopologicalAnalysisOpen2005,
  title = {A {{Topological Analysis}} of the {{Open Souce Software Development Community}}},
  booktitle = {Proceedings of the 38th {{Annual Hawaii International Conference}} on {{System Sciences}}},
  author = {{Jin Xu} and {Yongqin Gao} and Christley, S. and Madey, G.},
  year = {2005},
  month = jan,
  pages = {198a-198a},
  issn = {1530-1605},
  doi = {10.1109/HICSS.2005.57},
  abstract = {The fast growth of OSS has increased the interest in studying the composition of the OSS community and its collaboration mechanisms. Moreover, the success of a project may be related to the underlying social structure of the OSS development community. In this paper, we perform a quantitative analysis of Open Source Software developers by studying the entire development community at SourceForge. Statistics and social network properties are explored to find collaborations and the effects of different members in the OSS development community. Small world phenomenon and scale free behaviors are found in the SourceForge development network. These topological properties may potentially explain the success and efficiency of OSS development practices. We also infer from our analysis that weakly associated but contributing co-developers and active users may be an important factor in OSS development.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\X3HWY8QQ\\Xu et al. - 2005 - A Topological Analysis of the Open Source Software.pdf;C\:\\Users\\csepa\\Zotero\\storage\\R4THST2S\\1385642.html},
  keywords = {Computer bugs,Data mining,Information analysis,Open source software,Performance analysis,Programming,Project management,Social network services,Statistics,Technological innovation}
}

@misc{kastrenakesMozillaLaying2502020a,
  title = {Mozilla Is Laying off 250 People and Planning a `New Focus' on Making Money},
  author = {Kastrenakes, Jacob},
  year = {2020},
  month = aug,
  abstract = {"I desperately wish there was some other way."},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\6DBKRIRL\\mozilla-layoffs-quarter-staff-250-people-new-revenue-focus.html},
  howpublished = {https://www.theverge.com/2020/8/11/21363424/mozilla-layoffs-quarter-staff-250-people-new-revenue-focus},
  journal = {The Verge},
  language = {en}
}

@misc{krishnamurthyCaveCommunity2002,
  title = {Cave or Community?},
  author = {Krishnamurthy, Sandeep},
  year = {2002},
  month = jun,
  publisher = {{Valauskas, Edward J.}},
  abstract = {Open-source software has commonly been regarded as work produced by a community of developers.  The author seeks empirical evidence to identify which is more common - the cave, a lone producer, or the community},
  copyright = {Copyright Sandeep Krishnamurthy, 2002 - All rights reserved.},
  howpublished = {https://firstmonday.org/ojs/index.php/fm/article/download/960/881?inline=1},
  journal = {First Monday, ISSN 1396-0466},
  language = {en},
  type = {Text}
}

@article{limaCodingTogetherScale2014,
  title = {Coding {{Together}} at {{Scale}}: {{GitHub}} as a {{Collaborative Social Network}}},
  shorttitle = {Coding {{Together}} at {{Scale}}},
  author = {Lima, Antonio and Rossi, Luca and Musolesi, Mirco},
  year = {2014},
  month = may,
  volume = {8},
  issn = {2334-0770},
  copyright = {Copyright (c)},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\BWI4RRKM\\Lima et al. - 2014 - Coding Together at Scale GitHub as a Collaborativ.pdf;C\:\\Users\\csepa\\Zotero\\storage\\S8PNZ4K9\\14552.html},
  journal = {Proceedings of the International AAAI Conference on Web and Social Media},
  keywords = {collaborative networks},
  language = {en},
  number = {1}
}

@article{linHybridInnovationDynamics2006,
  title = {Hybrid Innovation: {{The}} Dynamics of Collaboration between the {{FLOSS}} Community and Corporations},
  shorttitle = {Hybrid Innovation},
  author = {Lin, Yuwei},
  year = {2006},
  month = dec,
  volume = {18},
  pages = {86--100},
  issn = {0897-1986, 1874-6314},
  doi = {10.1007/s12130-006-1005-7},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\I3TMCHVL\\Lin - 2006 - Hybrid innovation The dynamics of collaboration b.pdf},
  journal = {Knowledge, Technology \& Policy},
  language = {en},
  number = {4}
}

@article{lopez-fernandezApplyingSocialNetwork2006,
  title = {Applying {{Social Network Analysis Techniques}} to {{Community}}-{{Driven Libre Software Projects}}},
  author = {{L{\'o}pez-Fern{\'a}ndez}, Luis and Robles, Gregorio and {Gonzalez-Barahona}, Jesus and Herraiz, Israel},
  year = {2006},
  month = jan,
  volume = {1},
  pages = {27--48},
  doi = {10.4018/jitwe.2006070103},
  abstract = {Source code management repositories of large, long-lived libre (free, open source) software projects can be a source of valuable data about the organizational structure, evolution, and knowledge exchange in the corresponding development communities. Unfortunately, the sheer volume of the available information renders it almost unusable without applying methodologies which highlight the relevant information for a given aspect of the project. Such methodology is proposed in this article, based on well known concepts from the social networks analysis field, which can be used to study the relationships among developers and how they collaborate in different parts of a project. It is also applied to data mined from some well known projects (Apache, GNOME, and KDE), focusing on the characterization of their collaboration network architecture. These cases help to understand the potentials of the methodology and how it is applied, but also shows some relevant results which open new paths in the understanding of the informal organization of libre software development communities.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\LA2L7H8B\\López-Fernández et al. - 2006 - Applying Social Network Analysis Techniques to Com.pdf},
  journal = {IJITWE}
}

@inproceedings{maMiningNetworkProgrammers2017,
  title = {Mining the {{Network}} of the {{Programmers}}: {{A Data}}-{{Driven Analysis}} of {{GitHub}}},
  shorttitle = {Mining the {{Network}} of the {{Programmers}}},
  booktitle = {Proceedings of the 12th {{Chinese Conference}} on {{Computer Supported Cooperative Work}} and {{Social Computing}}},
  author = {Ma, Yezhou and Li, Huiying and Hu, Jiyao and Xie, Rong and Chen, Yang},
  year = {2017},
  month = sep,
  pages = {165--168},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3127404.3127431},
  abstract = {GitHub is a worldwide popular website for version control and source code management. In addition, since its users can follow each other, it also forms a professional social network of millions of users. In this work, we perform a data-driven study for analyzing the GitHub network. By introducing a distributed crawling framework, we first collect profiles and behavioral data of more than 2 million GitHub users. To the best of our knowledge, this is the largest and latest public dataset of GitHub. Then, we build the social graph of these users and conduct a thorough analysis of the network structure. Moreover, we investigate the user behavior patterns, particularly the patterns of the "commit" activities. Finally, we utilize machine learning methods to discover important users in the network with a high accuracy and a low overhead. Our inspiring findings are helpful for GitHub to provide better services for its users.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\ZH7B8MP5\\Ma et al. - 2017 - Mining the Network of the Programmers A Data-Driv.pdf},
  isbn = {978-1-4503-5352-6},
  keywords = {GitHub,machine learning,PageRank,professional social networks,spatial-temporal analysis},
  series = {{{ChineseCSCW}} '17}
}

@incollection{martinez-romoUsingSocialNetwork2008,
  title = {Using {{Social Network Analysis Techniques}} to {{Study Collaboration}} between a {{FLOSS Community}} and a {{Company}}},
  booktitle = {Open {{Source Development}}, {{Communities}} and {{Quality}}},
  author = {{Martinez-Romo}, Juan and Robles, Gregorio and {Gonzalez-Barahona}, Jesus M. and {Ortu{\~n}o-Perez}, Miguel},
  editor = {Russo, Barbara and Damiani, Ernesto and Hissam, Scott and Lundell, Bj{\"o}rn and Succi, Giancarlo},
  year = {2008},
  volume = {275},
  pages = {171--186},
  publisher = {{Springer US}},
  address = {{Boston, MA}},
  doi = {10.1007/978-0-387-09684-1_14},
  abstract = {Because of the sheer volume of information available in FLOSS repositories, simple analysis have to face the problems of filtering the relevant information. Hence, it is essential to apply methodologies that highlight that information for a given aspect of the project. In this paper, some techniques from the social sciences have been used on data from version control systems to extract information about the development process of FLOSS projects with the aim of highlighting several processes that occur in FLOSS projects and that are difficult to obtain by other means. In particular, the collaboration between the FLOSS community and a company has been studied by selecting two projects as case studies. The results highlight aspects such as efficiency in the development process, release management and leadership turnover.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\6E7RDCLK\\Martinez-Romo et al. - 2008 - Using Social Network Analysis Techniques to Study .pdf},
  isbn = {978-0-387-09683-4 978-0-387-09684-1},
  language = {en}
}

@article{mccleanSocialNetworkAnalysis2021,
  title = {Social Network Analysis of Open Source Software: {{A}} Review and Categorisation},
  shorttitle = {Social Network Analysis of Open Source Software},
  author = {McClean, Kelvin and Greer, Des and {Jurek-Loughrey}, Anna},
  year = {2021},
  month = feb,
  volume = {130},
  pages = {106442},
  issn = {0950-5849},
  doi = {10.1016/j.infsof.2020.106442},
  abstract = {Context: As companies have become large users of Open Source Software, it is important that they feel comfortable in their Open Source strategies. One of the critical differences between Open Source and Proprietary Software is the communication networks. Objective: This paper tries to set a base for understanding how open source teams are structured and how they change. This is vital to understanding Open Source Software Communities. Method: The paper looks into previous research on Social Network Analysis of Open Source Software, using a systematic literature review. Papers were gathered from Scopus, IEEEXplore and ACM Digital Library, and used or discarded based on predetermined inclusion and exclusion criteria. Research which focuses on the success factors of Open Source Software through Network Analysis is also examined. Results: A subjective categorisation is established for the papers: Structure, Lifecycle and Communication. It was found that the structure of a project has a large bearing on project success, with developers having previously worked together being indicative of project success. Other structure indicators of success are having a small but structured hierarchy, a diverse user and developer base, and project prominence. However, it was found that information on how these structures appear and evolve over time is lacking, and future research into temporal data models to determine project success information is suggested. Conclusions: A categorisation of existing research on Social Network Analysis is provided as a basis for further research. Further work into the lifecycle of OSS projects through Social Network Analysis of temporal project information is suggested.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\4CCG58V8\\McClean et al. - 2021 - Social network analysis of open source software A.pdf;C\:\\Users\\csepa\\Zotero\\storage\\S45R5KSW\\S0950584920301956.html},
  journal = {Information and Software Technology},
  keywords = {Open source software,Review,Social network analysis},
  language = {en}
}

@article{mockusTwoCaseStudies2002,
  title = {Two Case Studies of Open Source Software Development: {{Apache}} and {{Mozilla}}},
  shorttitle = {Two Case Studies of Open Source Software Development},
  author = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D.},
  year = {2002},
  month = jul,
  volume = {11},
  pages = {309--346},
  issn = {1049-331X},
  doi = {10.1145/567793.567795},
  abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine data from two major open source projects, the Apache web server and the Mozilla browser. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution intervals for these OSS projects. We develop several hypotheses by comparing the Apache project with several commercial projects. We then test and refine several of these hypotheses, based on an analysis of Mozilla data. We conclude with thoughts about the prospects for high-performance commercial/open source process hybrids.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\9UHKPAJN\\Mockus et al. - 2002 - Two case studies of open source software developme.pdf},
  journal = {ACM Transactions on Software Engineering and Methodology},
  keywords = {Apache,code ownership,defect density,Mozilla,Open source software,repair interval},
  number = {3}
}

@misc{MozillaLays70,
  title = {Mozilla Lays off 70 as It Waits for New Products to Generate Revenue},
  abstract = {Mozilla laid off about 70 employees today, TechCrunch has learned. In an internal memo, Mozilla chairwoman and interim CEO Mitchell Baker specifically mentions the slow rollout of the organization's new revenue-generating products as the reason for why it needed to take this action. The overa\ldots},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\RFY9R982\\mozilla-lays-off-70-as-it-waits-for-subscription-products-to-generate-revenue.html},
  journal = {TechCrunch},
  language = {en-US}
}

@inproceedings{ohMembershipDynamicsNetwork2004,
  title = {Membership {{Dynamics}} and {{Network Stability}} in the {{Open}}-{{Source Community}}: {{The Ising Perspective}}.},
  shorttitle = {Membership {{Dynamics}} and {{Network Stability}} in the {{Open}}-{{Source Community}}},
  author = {Oh, Wonseok and Jeon, Sangyong},
  year = {2004},
  month = jan,
  pages = {413--426}
}

@article{pwcLeadingBenefitsOpensource2016,
  title = {Leading Benefits of Open-Source Software among Enterprises Worldwide as of 2016},
  author = {{PwC}},
  year = {2016},
  abstract = {The statistic reveals the leading benefits of open-source software use and development for enterprises worldwide, according to a 2016 survey of C-level executives and IT and security directors.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\J9T66FJK\\worldwide-enterprises-open-source-benefits.html},
  journal = {Statista},
  language = {en}
}

@misc{raymondCathedralBazaar1998,
  title = {The Cathedral and the Bazaar},
  author = {Raymond, Eric S.},
  year = {1998},
  month = mar,
  publisher = {{Valauskas, Edward J.}},
  abstract = {Author discusses theories of software engineering in terms of two fundamentally different development styles - the cathedral model of most of the commercial world versus the bazaar model of the Linux world.},
  howpublished = {https://firstmonday.org/ojs/index.php/fm/article/download/578/499?inline=1},
  language = {en},
  type = {Text}
}

@article{sekaraFundamentalStructuresDynamic2016,
  title = {Fundamental Structures of Dynamic Social Networks},
  author = {Sekara, Vedran and Stopczynski, Arkadiusz and Lehmann, Sune},
  year = {2016},
  month = sep,
  volume = {113},
  pages = {9977--9982},
  issn = {0027-8424, 1091-6490},
  doi = {10.1073/pnas.1602803113},
  abstract = {Social systems are in a constant state of flux, with dynamics spanning from minute-by-minute changes to patterns present on the timescale of years. Accurate models of social dynamics are important for understanding the spreading of influence or diseases, formation of friendships, and the productivity of teams. Although there has been much progress on understanding complex networks over the past decade, little is known about the regularities governing the microdynamics of social networks. Here, we explore the dynamic social network of a densely-connected population of {$\sim$}1,000 individuals and their interactions in the network of real-world person-to-person proximity measured via Bluetooth, as well as their telecommunication networks, online social media contacts, geolocation, and demographic data. These high-resolution data allow us to observe social groups directly, rendering community detection unnecessary. Starting from 5-min time slices, we uncover dynamic social structures expressed on multiple timescales. On the hourly timescale, we find that gatherings are fluid, with members coming and going, but organized via a stable core of individuals. Each core represents a social context. Cores exhibit a pattern of recurring meetings across weeks and months, each with varying degrees of regularity. Taken together, these findings provide a powerful simplification of the social network, where cores represent fundamental structures expressed with strong temporal and spatial regularity. Using this framework, we explore the complex interplay between social and geospatial behavior, documenting how the formation of cores is preceded by coordination behavior in the communication networks and demonstrating that social behavior can be predicted with high precision.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\6MKRWIXV\\Sekara et al. - 2016 - Fundamental structures of dynamic social networks.pdf},
  journal = {Proceedings of the National Academy of Sciences},
  language = {en},
  number = {36}
}

@inproceedings{stramWeightedOneMode2017,
  title = {Weighted {{One Mode Projection}} of a {{Bipartite Graph}} as a {{Local Similarity Measure}}},
  author = {Stram, Rotem and Reuss, Pascal and Althoff, Klaus-Dieter},
  year = {2017},
  month = jun,
  pages = {375--389},
  doi = {10.1007/978-3-319-61030-6_26},
  abstract = {Bipartite graphs are a common structure to model relationships between two populations. Many times a compression of the graph to one population, namely a one mode projection (OMP), is needed in order to gain insight into one of the populations. Since this compression leads to loss of information, several works in the past attempted to quantify the connection quality between the items from the population that is being projected, but have ignored the edge weights in the bipartite graph. This paper presents a novel method to create a weighted OMP (WOMP) by taking edge weights of the bipartite graph into account. The usefulness of the method is then displayed in a case-based reasoning (CBR) environment as a local similarity measure between unordered symbols, in an attempt to solve the long-tail problem of infrequently used but significant symbols of textual CBR. It is shown that our method is superior to other similarity options.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\MYDX9VSU\\Stram et al. - 2017 - Weighted One Mode Projection of a Bipartite Graph .pdf},
  isbn = {978-3-319-61029-0}
}

@inproceedings{surekaUsingSocialNetwork2011,
  title = {Using Social Network Analysis for Mining Collaboration Data in a Defect Tracking System for Risk and Vulnerability Analysis},
  booktitle = {Proceedings of the 4th {{India Software Engineering Conference}}},
  author = {Sureka, Ashish and Goyal, Atul and Rastogi, Ayushi},
  year = {2011},
  month = feb,
  pages = {195--204},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1953355.1953381},
  abstract = {Open source software projects are characterized as self organizing and dynamic in which volunteers around the world primarily driven by self-motivation (and not necessarily monetary compensation) contribute and collaborate to a software product. In contrast to close source or proprietary software, the organizational structure and task allocation in an open source project setting is unstructured. Software project managers perform risk, threat and vulnerability analysis to gain insights into the organizational structure for de-risking or risk mitigation. For example, it is important for a project manager to have an understanding of critical employees, core team, subject matter experts, sub-groups, leaders and communication bridges. Software repositories such as defect tracking systems, versioning systems and mailing lists contains a wealth of valuable information that can be mined for solving practically useful software engineering tasks. In this paper, we present a systematic approach to mine defect tracking system for risk, threat and vulnerability analysis in a software project. We derive a collaboration network from a defect tracking system and apply social network analysis techniques to investigate the derived network for the purpose of risk and vulnerability analysis. We perform empirical analysis on bug report data of Mozilla Firefox project and present the results of our analysis. We demonstrate how important information pertaining to risk and vulnerability can be uncovered using network analysis techniques from static record keeping software archive such as the bug tracking system.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\L5BY3C4U\\Sureka et al. - 2011 - Using social network analysis for mining collabora.pdf},
  isbn = {978-1-4503-0559-4},
  keywords = {collaboration network,defect tracking system,mining software repositories,risk,social network analysis,threat and vulnerability analysis},
  series = {{{ISEC}} '11}
}

@inproceedings{yunwenyeUnderstandingMotivationOpen2003,
  title = {Toward an Understanding of the Motivation of Open Source Software Developers},
  booktitle = {25th {{International Conference}} on {{Software Engineering}}, 2003. {{Proceedings}}.},
  author = {{Yunwen Ye} and Kishida, K.},
  year = {2003},
  month = may,
  pages = {419--429},
  issn = {0270-5257},
  doi = {10.1109/ICSE.2003.1201220},
  abstract = {An Open Source Software (OSS) project is unlikely to be successful unless there is an accompanied community that provides the platform for developers and users to collaborate. Members of such communities are volunteers whose motivation to participate and contribute is of essential importance to the success of OSS projects. In this paper, we aim to create an understanding of what motivates people to participate in OSS communities. We theorize that learning is one of the motivational forces. Our theory is grounded in the learning theory of Legitimate Peripheral Participation, and is supported by analyzing the social structure of OSS communities and the co-evolution between OSS systems and communities. We also discuss practical implications of our theory for creating and maintaining sustainable OSS communities as well as for software engineering research and education.},
  file = {C\:\\Users\\csepa\\Zotero\\storage\\N5NSTWEW\\1201220.html},
  keywords = {Collaboration,Collaborative software,Computer languages,Computer science,Open source software,Software engineering}
}


